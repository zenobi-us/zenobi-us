name: Release

on:
  push:
    branches:
      - master

env:
  HUSKY: 0 # https://typicode.github.io/husky/how-to.html#ci-server-and-docker

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

permissions:
  actions: read
  contents: write
  issues: write
  deployments: write
  pull-requests: write
  id-token: write

jobs:
  Process:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release-please.outputs.releases_created }}
      prs_created: ${{ steps.release-please.outputs.prs_created }}
      prs: ${{ steps.release-please.outputs.prs }}
      pr: ${{ steps.release-please.outputs.pr }}
      sha: ${{ steps.release-please.outputs.sha }}
    steps:
      - uses: googleapis/release-please-action@c2a5a2bd6a758a0937f1ddb1e8950609867ed15c # v4
        id: release-please
        with:
          token: ${{secrets.ZENOBIUS_MONOREPO_RELEASE_PLEASE_TOKEN}}
          release-type: node
      - name: Print Release Data
        run: |
          echo 'Release Data:'

          echo '''
            ${{ toJSON(steps.release-please.outputs) }}
          '''

  Deploy:
    needs: Process
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0

      - uses: jdx/mise-action@c37c93293d6b742fc901e1406b8f764f6fb19dac # v2
        with:
          experimental: true
          version: 2024.11.4

      - name: Yarn
        uses: ./.github/actions/setup-yarn

      - name: Configure Publishing
        uses: ./.github/actions/setup-npm-publish
        with:
          NpmRegistryUrl: https://registry.npmjs.org/
          NpmRcFile: .npmrc

      - if: ${{ needs.Process.outputs.releases_created == 'true' }}
        id: production-deployment
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          mise task run deploy --configuration=production

      - if: ${{ needs.Process.outputs.prs_created == 'true' }}
        id: development-deployment
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          mise task run deploy --configuration=development
